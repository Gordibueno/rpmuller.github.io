{"name":"Rick's Github Hackage","tagline":"Open source projects I'm playing with. Generally Python quantum stuff.","body":"Github Projects\r\n===============\r\n* [PyQuante](http://pyquante.sf.net)/[PyQuante2](https://github.com/rpmuller/pyquante2)\r\n* [Sympy for Quantum Circuits](https://github.com/rpmuller/sympy/tree/sympy_qcircuit/sympy/physics/quantum)\r\n* Python bindings for Libxc\r\n* Python bindings for Libint\r\n* Python2.7 bindings for Libquantum\r\n\r\nIPython Notebooks\r\n=================\r\n* Crash Course in Python for Scientists: Coming Soon!\r\n* [PyQuante2 Overview](http://nbviewer.ipython.org/5745404)\r\n* [Sympy Quantum Circuit Plotting](http://nbviewer.ipython.org/5843312)\r\n* [SVG graphics in IPython notebooks](http://nbviewer.ipython.org/5666810)\r\n\r\nProgress\r\n========\r\n* 27 Jun 2013\r\n  - Killed the stuff I did with RuntimeErrors in the iterators, and wrote a non-generator-based\r\n    SCFIterator that properly exits, and can keep track of whether or not it is converged. Haven't\r\n    wired this in to much of the code yet.     \r\n* 26 Jun 2013\r\n  - Added RuntimeErrors to PyQuante2 iterators when maxiters reached. Am not doing anything to catch\r\n    these at this point, but could do so later on.\r\n* 25 Jun 2013\r\n  - Poor man's scratcher: find . -size +100M -mtime +28 (yes, I need to clean my scratch directories).\r\n    Can also use with -exec rm {} \\;\r\n  - Had trouble getting the nosetests to run quickly in pyquante2. Worked around this by doing a \r\n    setup.py build_ext --inplace to get the cython libraries in the appropriate places, after which\r\n    the nosetest went from taking 74 sec to run to taking < 2 sec!\r\n  - Also moved test_cython into the tests directory, since now nose can run these tests.\r\n\r\n* 24 Jun 2013\r\n  - Profiling of unit tests in PyQuante2: Weird results. Looks as if the python versions of the integral routines\r\n    are being called when running tests through nose, but the cython version are called when running from the\r\n    command line.\r\n  - Spent a little bit of time doing some more with the sympy circuit plotter. Updated the notebook. \r\n    Can now do arbitrarily labelled 1Q gates, as well as controlled versions of these. Block multi-Q\r\n    gates don't work, nor do gates with matrices as their labels.\r\n* 23 Jun 2013\r\n  - libquantum wrappers: Extending python with C is very frustrating. Can't seem to get anything but segfaults! \r\n    Cython makes things much nicer, but I'm having trouble getting it to recognize _Complex\r\n  - When MacPorts won't download files for you, you can manually download them and stick them in \r\n    [Macports root]/var/macports/distfiles. But why does MacPorts fail to fetch so often? \r\n    EDIT: proxy problems, of course.\r\n  - Sticking this here since I forget it so often. To change the default (python or whatever) version in macports, do\r\n\r\n    port select --list python\r\n\r\n* 22 Jun 2013\r\n  - Fixed pyquante2 orbital symmetry bug, which wasn't a bug but arose from my missing a transpose.\r\n  - Prettified the pyquante2 plotting routines, and added to IPython notebook.\r\n  - Got proper X, CNOT, and CPHASE gates to work in Sympy\r\n\r\nLinks\r\n=====\r\n* [My Sandia Homepage](http://www.cs.sandia.gov/~rmuller).\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}